// This file was generated by lezer-generator. You probably shouldn't edit it.
import {LRParser} from "@lezer/lr"
const spec_identifier = {__proto__:null,length:30, sub:32, gsub:34, split:36, tolower:38, toupper:40, substr:42, match:44, index:46, BEGIN:50, END:54, function:58, while:62, do:66, for:70, in:72, break:76, continue:80, return:84, if:88, else:90, print:94, delete:98}
export const parser = LRParser.deserialize({
  version: 14,
  states: "1jOYQPOOOYQPO'#CaO#hQQO'#CeO#oQPO'#CeOOQO'#Ce'#CeOOQO'#Cd'#CdO#tQPO'#C_O#|QPO'#CdO$RQPO'#C_OOQO'#C_'#C_OOQO'#Db'#DbQYQPOOOOQO'#Cj'#CjO$RQPO'#CtO$RQPO'#CvO$WQPO'#CxO$]QPO'#CzO$RQPO'#C|O%^QPO'#DOOOQO'#DR'#DROOQO'#DT'#DTO%cQPO'#DVO$]QPO'#DXO%cQPO'#D[O%cQPO'#D^O&dQPO,58{OOQO,59P,59PO&kQPO'#DdO&pQPO,59zO%cQPO,59zO&xQPO,59zO&}QPO,59PO$]QPO,59OOOQO,58y,58yO'cQPO,59OOOQO-E7`-E7`OOQO,59`,59`OOQO,59b,59bO'mQPO,59dO'rQPO'#CeO#tQPO,59fO(WQPO,59hO*VQPO,59jO*^QPO,59qO#tQPO,59sO,dQPO,59vO.mQPO,59xOOQO1G.g1G.gOOQO,5:O,5:OOOQO-E7b-E7bO%cQPO1G/fO0sQPO1G/fOOQO1G/f1G/fOOQO1G.k1G.kOOQO1G.j1G.jO$]QPO'#DcO2|QPO1G.jO3UQPO1G.jO3aQPO1G/OOOQO1G/Q1G/QO%cQPO1G/SO3lQQO1G/UO3vQPO1G/UO3{QPO1G/_O6UQPO1G/bO:bQPO7+%QO8[QPO7+%QO:iQPO,59}OOQO-E7a-E7aOOQO7+$U7+$UO:wQPO7+$UO;PQPO7+$jO$RQPO7+$jO;PQPO7+$jO;XQPO7+$nO=_QPO7+$pO$]QPO7+$pO=dQPO7+$yO?mQPO7+$yO?uQPO<<HlOOQO<<Gp<<GpO$RQPO<<HUOOQO<<HU<<HUOA{QPO<<HUOBTQPO<<H[OBYQPO<<H[OOQO-E7c-E7cO?mQPO<<HeO$]QPO,5:POOQO<<He<<HeOOQOAN=pAN=pO$RQPOAN=pO$RQPOAN=vOBbQPOAN=vP?pQPO'#DeOOQOAN>PAN>PO#tQPO1G/kOOQOG23[G23[OOQOG23bG23bOBiQPOG23bOOQO7+%V7+%VOBnQPOLD(|O$RQPO!$'LhOOQO!)9BS!)9BSOBsQPO'#CeO$]QPO'#DVO$]QPO'#D[O$]QPO'#D^O$]QPO,59zO%cQPO,59OOBxQPO,59qOCQQPO,59vOC]QPO,59xO$]QPO1G/fOCeQPO1G/fO%cQPO'#DcO$]QPO1G/SOCpQPO1G/bOCxQPO7+%QOC{QPO7+%QODTQPO,59}OF^QPO7+$nOFfQPO<<HlO3oQQO'#CeOFnQPO,59zOFvQPO,59hO$RQPO'#C|",
  stateData: "GS~O![OSPOS~OSWOUPOYROZSO[SO_[O`[Oa[Ob[Oc[Od[Oe[Of[Og[Oi]Ok^Om_Oo`OqaOsbOvcOxdOzeO|fO!PgO!RhO!]QO!^SO!_SO~OYjO!TnO!akOUXX]XX~O!dmO~P#VO!]oO~OUPO]pO~O!`rO~OUPO~O!]vO~OYROZSO[SO_[O`[Oa[Ob[Oc[Od[Oe[Of[Og[O!]wO!^SO!_SO~O!`zO~OY#[OZSO[SO_[O`[Oa[Ob[Oc[Od[Oe[Of[Og[O!]SO!^SO!_SO~OV!PO~PYO!]!QO~O!akO!d!SO~O!]!UO~OY!VOUXa]Xa!aXa!bXa!cXa~O!a!XO!b!WO~P$]O!`![O~OYjOUXX]XX!aXX!bXX!cXX~Oo!^O~OSWOUPOYROZSO[SO_[O`[Oa[Ob[Oc[Od[Oe[Of[Og[Oi]Ok^Om_Oo`Oq#rOsbOvcOxdOz#]O|fO!P#^O!R#_O!^SO!_SO~O!]!_O~P(]O]#aOSyaUyaYyaZya[ya_ya`yaayabyacyadyaeyafyagyaiyakyamyaoyaqyasyavyaxyazya|ya!Pya!Rya!Yya!]ya!^ya!_yaVya~O]#aO!a#gOS!OaU!OaY!OaZ!Oa[!Oa_!Oa`!Oaa!Oab!Oac!Oad!Oae!Oaf!Oag!Oai!Oak!Oam!Oao!Oaq!Oas!Oav!Oax!Oaz!Oa|!Oa!P!Oa!R!Oa!Y!Oa!]!Oa!^!Oa!_!OaV!Oa~O]#aOS!QaU!QaY!QaZ!Qa[!Qa_!Qa`!Qaa!Qab!Qac!Qad!Qae!Qaf!Qag!Qai!Qak!Qam!Qao!Qaq!Qas!Qav!Qax!Qaz!Qa|!Qa!P!Qa!R!Qa!Y!Qa!]!Qa!^!Qa!_!QaV!Qa~O]#aO!a#gOS!SiU!SiY!SiZ!Si[!Si_!Si`!Sia!Sib!Sic!Sid!Sie!Sif!Sig!Sii!Sik!Sim!Sio!Siq!Sis!Siv!Six!Siz!Si|!Si!P!Si!R!Si!Y!Si!]!Si!^!Si!_!SiV!Si~O!a!XO!b!gO~O]pO!a!XO!b!gO~O!]!kO!akO!b!jO~Ot!mO!d#`O~P#VO!c!nO~O}!pOS{iU{iY{iZ{i[{i_{i`{ia{ib{ic{id{ie{if{ig{ii{ik{im{io{iq{is{iv{ix{iz{i|{i!P{i!R{i!Y{i!]{i!^{i!_{iV{i!c{i~O!a#gOS!OiU!OiY!OiZ!Oi[!Oi_!Oi`!Oia!Oib!Oic!Oid!Oie!Oif!Oig!Oii!Oik!Oim!Oio!Oiq!Ois!Oiv!Oix!Oiz!Oi|!Oi!P!Oi!R!Oi!Y!Oi!]!Oi!^!Oi!_!OiV!Oi~O!a#gOS!SqU!SqY!SqZ!Sq[!Sq_!Sq`!Sqa!Sqb!Sqc!Sqd!Sqe!Sqf!Sqg!Sqi!Sqk!Sqm!Sqo!Sqq!Sqs!Sqv!Sqx!Sqz!Sq|!Sq!P!Sq!R!Sq!Y!Sq!]!Sq!^!Sq!_!SqV!Sq~O]#aO~P8[O]pO!a!Va!b!Va!c!Va~O!a!XO!b!rO~O!akO!b!sO~O]#aOSpqUpqYpqZpq[pq_pq`pqapqbpqcpqdpqepqfpqgpqipqkpqmpqopqqpqspqvpqxpqzpq|pq!Ppq!Rpq!Ypq!]pq!^pq!_pqVpq~O!]!vO~O}!yOS{qU{qY{qZ{q[{q_{q`{qa{qb{qc{qd{qe{qf{qg{qi{qk{qm{qo{qq{qs{qv{qx{qz{q|{q!P{q!R{q!Y{q!]{q!^{q!_{qV{q!c{q~OUPO|!zO~O!a#gOS!SyU!SyY!SyZ!Sy[!Sy_!Sy`!Sya!Syb!Syc!Syd!Sye!Syf!Syg!Syi!Syk!Sym!Syo!Syq!Sys!Syv!Syx!Syz!Sy|!Sy!P!Sy!R!Sy!Y!Sy!]!Sy!^!Sy!_!SyV!Sy~O!akO!b!}O~O!b#OO~O]pO!c#PO~O!]#oO~P(]O!c#XO~O!b#YO~O!]jO~O]pO!cya~O]pO!a!XO!c!Oa~O]pO!c!Qa~O]pO!a!XO!c!Si~O!a!XO!c!Oi~O]pO!a!XO!c!Sq~O]#aOS!VaU!VaY!VaZ!Va[!Va_!Va`!Vaa!Vab!Vac!Vad!Vae!Vaf!Vag!Vai!Vak!Vam!Vao!Vaq!Vas!Vav!Vax!Vaz!Va|!Va!P!Va!R!Va!Y!Va!]!Va!^!Va!_!Va!a!VaV!Va~O]pO!cpq~O!a!XO!c!Sy~O!akO!d#eO~Oo#hO~OSP![[!]![~",
  goto: "(T!YPPP!ZP!gPP#o%WPPPP%uPPPPPPPPP&dP&dP&dP&dP&dP&dPP&dP&dP&dP&dPP&dP&dP&dP&l&v'j'}WYOPZiQ!`zR#V#P[XOPZiz#PSqUWQt]Qu^QyaQ!]xQ!a|Q!t!jQ!{!pQ!|!sQ#R!yQ#T!}Q#U#OQ#W#SQ#Z#YR#q#r[UOPZiz#PQx`Q{eQ|fQ}gQ!OhQ!TmS!Wp#aQ!ZrQ!c!SQ!e!XQ!l!^Q!w!nQ#S!zQ#b#]Q#c#^Q#d#_Q#f#`Q#j#eQ#l#gR#m#h!XTOPZ`efghimprz!S!X!^!n!z#P#]#^#_#`#a#e#g#h!XVOPZ`efghimprz!S!X!^!n!z#P#]#^#_#`#a#e#g#h]XOPZiz#PQZOQiPTsZiQ!YrQ!b}Q!d!T`!f!Y!b!d!h!q#i#k#nQ!h!ZQ!q!cQ#i#cQ#k#fR#n#jQlQW!Rl!i!u#pQ!i![Q!u!kT#p!_#oQ!o!aR!x!o",
  nodeNames: "âš  LineComment Program Statement Regex Block LeftBrace RightBrace Expression Prefix PrefixOp String Number InfixOperator StdLibCall length sub gsub split tolower toupper substr match index BeginStatement BEGIN EndStatement END FunctionStatement function WhileStatement while DoWhileStatement do ForStatement for in BreakStatement break ContinueStatement continue ReturnStatement return IfStatement if else PrintStatement print DeleteStatement delete AssignStatement ModifyAndAssignOperators",
  maxTerm: 66,
  nodeProps: [
    ["group", 3,"statement"],
    ["isolate", 11,""]
  ],
  skippedNodes: [0,1],
  repeatNodeCount: 4,
  tokenData: "+`~RsX^#`pq#`qr$Trs$Yst$}tu%fuv%}vw&[wx&gxy'Vyz'[z{%}{|'a|}'q}!O'v!P!Q(R!Q![*Z!]!^*t!_!`*y!b!c%f!c!}%f#Q#R%}#R#S%f#T#o%f#o#p+O#p#q+T#q#r+Z#y#z#`$f$g#`#BY#BZ#`$IS$I_#`$I|$JO#`$JT$JU#`$KV$KW#`&FU&FV#`~#eY![~X^#`pq#`#y#z#`$f$g#`#BY#BZ#`$IS$I_#`$I|$JO#`$JT$JU#`$KV$KW#`&FU&FV#`~$YO!_~~$]VOY$YZr$Yrs$rs#O$Y#P;'S$Y;'S;=`$w<%lO$Y~$wOZ~~$zP;=`<%l$Y~%SSP~OY$}Z;'S$};'S;=`%`<%lO$}~%cP;=`<%l$}~%kU!]~tu%f!Q![%f!b!c%f!c!}%f#R#S%f#T#o%f~&SP]~!_!`&VQ&[O!TQ~&_Pvw&b~&gO]~~&jVOY&gZw&gwx$rx#O&g#P;'S&g;'S;=`'P<%lO&g~'SP;=`<%l&g~'[O!`~~'aO!b~~'fQ]~{|'l!_!`&V~'qOY~~'vO!a~~'{Q!^P}!O'l!_!`&VR(UWOY(nZ!P(n!P!Q)T!Q!_(n!_!`)r!`;'S(n;'S;=`)l<%lO(nP(qUOY(nZ!P(n!P!Q)T!Q;'S(n;'S;=`)l<%lO(nP)YUSPOY(nZ!P(n!P!Q)T!Q;'S(n;'S;=`)l<%lO(nP)oP;=`<%l(nR)wU!TQOY(nZ!P(n!P!Q)T!Q;'S(n;'S;=`)l<%lO(n~*bU[~!]~tu%f!Q![*Z!b!c%f!c!}%f#R#S%f#T#o%f~*yO!c~~+OO!d~~+TOU~~+WP#p#q&b~+`OV~",
  tokenizers: [0, 1],
  topRules: {"Program":[0,2]},
  specialized: [{term: 59, get: (value) => spec_identifier[value] || -1}],
  tokenPrec: 1745
})
